#include <stdio.h>
#include <stdlib.h>
struct node
{
    struct node *prev;
    int info;
    struct node *next;
};
struct node *create_list(struct node *start);
void display(struct node *start);
struct node *addatempty(struct node *start, int data);
struct node *addatbeg(struct node *start, int data);
struct node *addatend(struct node *start, int data);
struct node *addbefore(struct node *start,int data, int item);
struct node *addafter(struct node *start,int data, int item);
struct node *del(struct node *start, int data);
struct node *reverse(struct node *start);
int main()
{
   struct node *start=NULL;
   int data, choice,item;
   while(1)
   {
       printf("1 for Create List\n");
       printf("2 for Display\n");
       printf("3 for Add at Empty List\n");
       printf("4 for Add at Beginning in list\n");
       printf("5 for Add at End in List\n");
       printf("6 for Add after\n");
       printf("7 for Add before\n");
       printf("8 for Delete\n");
       printf("9 for Reverse\n");
       printf("10 for Exit\n");
       printf("Enter Your choice........");
       scanf("%d",&choice);
       switch(choice)
       {
            case 1:
            start=create_list(start);
            break;
            case 2:
            display(start);
            break;
            case 3:
            printf("Enter the Element to be insert\n");
            scanf("%d",&data);
            start=addatempty(start,data);
            break;
            case 4:
            printf("Enter the Element to be insert\n");
            scanf("%d",&data);
           // start=addatbeg(start,data);
            break;
            case 5:
            printf("Enter the Element to be insert\n");
            scanf("%d",&data);
            start=addatend(start,data);
            break;
            case 6:
            printf("Enter the Element to be insert\n");
            scanf("%d",&data);
            printf("Enter Item add after \n");
            scanf("%d",&item);
           // start=addafter(start,data,item);
            break;
            case 7:
            printf("Enter the Element to be insert\n");
            scanf("%d",&data);
            printf("Enter Item add before \n");
            scanf("%d",&item);
           // start=addbefore(start,data,item);
            break;
            case 8:
            printf("Enter the Element to be Delete\n");
            scanf("%d",&data);
          //  start=del(start,data);
            break;
            case 9:
          //  start=reverse(start);
            break;
            case 10:
            exit(1);
            break;
            default:
            printf("Invalid Choice\n");
        }
   }
    return 0;
}
struct node *create_list(struct node *start)
{
    int i,n,data;
    printf("Enter the No of Nodes\n");
    scanf("%d",&n);
    start=NULL;
    if(n==0)
    {
        return start;
    }
    printf("Enter the data to be insert\n");
    scanf("%d",&data);
    start=addatempty(start,data);
    for(i=2;i<=n;i++)
    {
        printf("Enter the data to be insert\n");
        scanf("%d",&data);
        start=addatend(start,data);
    }
    return start;
}
struct node *addatempty(struct node *start, int data)
{
    struct node *tmp;
    tmp=(struct node *)malloc(sizeof(struct node));
    tmp->info=data;
    tmp->prev=NULL;
    tmp->next=NULL;
    start=tmp;
    return start;
}
struct node *addatend(struct node *start, int data)
{
    struct node *tmp,*p;
    tmp=(struct node *)malloc(sizeof(struct node));
    tmp->info=data;
    p=start;
    while(p->next!=NULL)
    {
        p=p->next;
    }
    p->next=tmp;
    tmp->next=NULL;
    tmp->prev=p;
    return start;
}
void display(struct node *start)
{
    struct node *p;
    if(start==NULL)
    {
        printf("List is Empty\n");
        return;
    }
    p=start;
    printf("Lsit is\n");
    while(p!=NULL)
    {
        printf("%d ",p->info);
        p=p->next;
    }
    printf("\n");
}
